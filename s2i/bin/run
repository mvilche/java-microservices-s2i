#!/bin/bash -e
#
# S2I run script for the 'springboot-sti' image.
# The run script executes the server that runs your application.
#
# For more information see the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

export APP_DIR=/opt/app-root
export JMX_METRICS=
export PRECHECK=

if [ -z "$TIMEZONE" ]; then
	echo "···································································································"
	echo "---> TIMEZONE ENV NOT FOUND - START WITH DEFAULT VALUES"
	echo "---> VALUES: America/Montevideo | America/El_Salvador"
	echo "···································································································"
else
	echo "···································································································"
	echo "---> TIMEZONE ENV FOUND!: " $TIMEZONE
	echo "---> PRINT DATETIME: " 
	echo "···································································································"
	cat /usr/share/zoneinfo/$TIMEZONE > /etc/localtime && \
	echo $TIMEZONE > /etc/timezone
	date
fi

if [ ! -z "$WAITFOR_HOST" ] && [ ! -z "$WAITFOR_PORT" ] ; then
	echo "···································································································"
	echo "---->  WAITFOR  ENABLE.."
    until nc -z -v -w5 $WAITFOR_HOST $WAITFOR_PORT &> /dev/null; do echo waiting for $WAITFOR_HOST; sleep 10; done;	
	echo "···································································································"
fi

if [ "$PROMETHEUS_ENABLE" == 1 ] && [ "$JOLOKIA_ENABLE" == 1 ] && [ "$GLOWROOT_ENABLE" == 1 ]; then
echo "---->  ERROR -  FOUND PROMETHEUS_ENABLE = 1 AND JOLOKIA_ENABLE = 1 AND GLOWROOT_ENABLE = 1 "
echo "---->  YOU MUST SELECT ONE!"
echo "---->  CONTINUING WITHOUT ACTIVE METRICS...."
else
PRECHECK=1
fi


if [ "$JOLOKIA_ENABLE" == 1 ] && [ "$PRECHECK" == 1 ] ; then
echo "---->  JOLOKIA_ENABLE FOUND!.."
echo "---->  METRICS ENDPOINT 0.0.0.0:8787/jolokia"
JMX_METRICS=-javaagent:/usr/libexec/s2i/jolokia.jar=host=0.0.0.0,protocol=http,port=8787
fi

if [ "$PROMETHEUS_ENABLE" == 1 ] && [ "$PRECHECK" == 1 ]; then
echo "---->  PROMETHEUS_ENABLE FOUND!.."
echo "---->  METRICS ENDPOINT 0.0.0.0:8787/metrics"
JMX_METRICS=-javaagent:/usr/libexec/s2i/prometheus.jar=0.0.0.0:8787:/usr/libexec/s2i/prometheus-config.yml
fi

if [ "$GLOWROOT_ENABLE" == 1 ] && [ "$PRECHECK" == 1 ] ; then
echo "---->  GLOWROOT_ENABLE FOUND!.."
if [ ! -z "$GLOWROOT_CENTRAL_COLLECTOR" ]; then
echo "---->  GLOWROOT_CENTRAL_COLLECTOR FOUND!.."
echo "---->  SEND GLOWROOT METRICS TO $GLOWROOT_CENTRAL_COLLECTOR"
echo "collector.address=$GLOWROOT_CENTRAL_COLLECTOR" > /usr/libexec/s2i/glowroot/glowroot.properties
if [ ! -z "$GLOWROOT_CENTRAL_COLLECTOR_AGENTID" ]; then
echo "---->  GLOWROOT_CENTRAL_COLLECTOR_AGENTID FOUND!.."
echo "---->  USING agent.id $GLOWROOT_CENTRAL_COLLECTOR_AGENTID"
echo "agent.id=$GLOWROOT_CENTRAL_COLLECTOR_AGENTID" >> /usr/libexec/s2i/glowroot/glowroot.properties
fi
fi
echo "---->  METRICS ENDPOINT 0.0.0.0:8778/"
JMX_METRICS=-javaagent:/usr/libexec/s2i/glowroot/glowroot.jar
fi




if [ ! -z $OVERRIDE_JAVA_OPTS ]; then
echo "----> OVERRIDE_JAVA_OPTS FOUND!"
echo "----> SETTING JAVA_OPTS $OVERRIDE_JAVA_OPTS"
export JAVA_OPTS=$OVERRIDE_JAVA_OPTS
else
if [ "$JAVA_VERSION_CHECK" == 11 ]; then
echo "----> DETECTED JAVA VERSION >= 11"
echo "----> SETTING JAVA_OPTS"
export JAVA_OPTS="-Djava.awt.headless=true -XX:-UseContainerSupport -XX:MaxRAMPercentage=90.0 -Dfile.encoding=UTF-8 -XX:+ExitOnOutOfMemoryError"
echo "----> $JAVA_OPTS"
fi
if [ "$JAVA_VERSION_CHECK" == 8 ]; then
echo "----> DETECTED JAVA = 8"
echo "----> SETTING JAVA_OPTS"
export JAVA_OPTS="-Djava.awt.headless=true -XX:MaxRAMFraction=1 -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dfile.encoding=UTF-8 -XX:+ExitOnOutOfMemoryError -Djava.net.preferIPv4Stack=true"
echo "----> $JAVA_OPTS"

fi
fi

if [ ! -z $EXTRA_JAVA_OPTS ]; then
echo "----> EXTRA_JAVA_OPTS FOUND!"
echo "----> ADD EXTRA_JAVA_OPTS TO JAVA_OPTS"
echo "----> SETTING EXTRA_JAVA_OPTS $EXTRA_JAVA_OPTS"
fi

	echo "···································································································"
	echo "STARTING MICROSERVICE..."
	echo "···································································································"

if [ -f $APP_DIR/quarkus-run.jar ]; then
echo "QUARKUS APP FAST JAR STARTING.."
exec java $JMX_METRICS $JAVA_OPTS $EXTRA_JAVA_OPTS -jar /opt/app-root/quarkus-run.jar $APP_OPTIONS

else
exec java $JMX_METRICS $JAVA_OPTS $EXTRA_JAVA_OPTS -jar /opt/app-root/app.jar $APP_OPTIONS
fi
