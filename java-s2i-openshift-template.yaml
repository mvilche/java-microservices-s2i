    ##comienzo Template
  apiVersion: v1
  kind: Template
  metadata:
    name: java-s2i
    labels:
      template: java-s2i
      autor: "Martin_Fabrizzio_Vilche"
    annotations:
      openshift.io/display-name: "Java s2i OpenJDK"
      iconClass: "icon-java"
      description: >-
        Builder Image and runtime image java s2i.
        Martin Fabrizzio Vilche

  objects:


  - apiVersion: v1
    data:
      application.properties: |-
        app.name=example
    kind: ConfigMap
    metadata:
      name: ${APP_NAME}-config



  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "${APP_NAME}"
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: java-s2i-${APP_NAME}
        deploymentconfig: ${APP_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: java-s2i-${APP_NAME}
            deploymentconfig: ${APP_NAME}
        spec:
          containers:
            - env:
                - name: APP_OPTIONS
                  value: ''
                - name: EXTRA_JAVA_OPTS
                  value: ''
                - name: TIMEZONE
                  value: America/Montevideo
                - name: PROMETHEUS_ENABLE
                  value: '1'
                - name: JOLOKIA_ENABLE
                  value: '0'
              image: "${APP_NAME}:latest"
              imagePullPolicy: Always
              name: ${APP_NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8778
                  protocolo: TCP
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:              
              - name: ${APP_NAME}-config
                mountPath: /opt/config             
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 10
          volumes:
          - name: ${APP_NAME}-config
            configMap:
              name: ${APP_NAME}-config          
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}:latest"
          type: ImageChange

  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: java-s2i-${APP_NAME}
      name: ${APP_NAME}-s2i
    spec:
      completionDeadlineSeconds: 1800
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}-s2i:latest
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        git:
          uri: ${REPO_GIT}
          ref: ${BRANCH_GIT}
        type: Git
      strategy:
        sourceStrategy:
          incremental: true
          forcePull: true
          env:
            - name: NEXUS_MIRROR_URL
              value: ${NEXUS_MIRROR_URL}
            - name: MVN_OPTS
              value: ${MVN_OPTS}
            - name: QUARKUS_PACKAGE_TYPE
              value: "fast-jar"
          from:
            kind: ImageStreamTag
            name: java-s2i-builder-${VERSION_JDK}:latest
        type: Source
      successfulBuildsHistoryLimit: 5
      triggers:
        - type: ConfigChange
        - type: "imageChange"
          imageChange:
            from:
              kind: "ImageStreamTag"
              name: "java-s2i-builder-${VERSION_JDK}:latest"




  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: java-s2i-${APP_NAME}
      name: ${APP_NAME}-runtime
    spec:
      completionDeadlineSeconds: 1800
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      source:
        type: Dockerfile
        dockerfile: |-
          FROM java-s2i-runtime-${VERSION_JDK}:latest
          USER root
          COPY app-root /opt/app-root
          RUN chown 1001:0 /opt
          USER 1001:0
        images:
        - from:
            kind: ImageStreamTag
            name: ${APP_NAME}-s2i:latest
          paths:
          - sourcePath: /opt
            destinationDir: "."
      strategy:
        dockerStrategy:
          from:
            kind: ImageStreamTag
            name: java-s2i-runtime-${VERSION_JDK}:latest
        type: Docker
      triggers:
      - type: "imageChange"
        imageChange:
          from:
            kind: "ImageStreamTag"
            name: "${APP_NAME}-s2i:latest"



  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: java-s2i-${APP_NAME}
      name: ${APP_NAME}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: JMX
          port: 8778
          protocol: TCP
          targetPort: 8778
      selector:
        app: java-s2i-${APP_NAME}
        deploymentconfig: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP


  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: java-s2i-${APP_NAME}
      name: ${APP_NAME}
    spec:
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${APP_NAME}
        weight: 100
      wildcardPolicy: None


  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: java-s2i-${APP_NAME}
      name: ${APP_NAME}
    spec: {}

  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: java-s2i-${APP_NAME}
      name: ${APP_NAME}-s2i
    spec: {}


######
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: java-s2i
        build: java-s2i-builder-${VERSION_JDK}
      name: java-s2i-builder-${VERSION_JDK}
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: 'java-s2i-builder-${VERSION_JDK}:latest'
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        contextDir: .
        git:
          ref: main
          uri: 'https://github.com/mvilche/java-microservices-s2i.git'
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: openjdk${VERSION_JDK}/Dockerfile.jdk.${IMAGE_VERSION}
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers:
        - type: ConfigChange


  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: java-s2i
      name: java-s2i-builder-${VERSION_JDK}
    spec: {}

  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: java-s2i
      name: java-s2i-runtime-${VERSION_JDK}
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: 'java-s2i-runtime-${VERSION_JDK}:latest'
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        contextDir: .
        git:
          ref: main
          uri: 'https://github.com/mvilche/java-microservices-s2i.git'
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: openjdk${VERSION_JDK}/Dockerfile.jre.${IMAGE_VERSION}
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers:
        - type: ConfigChange

  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: java-s2i
      name: java-s2i-runtime-${VERSION_JDK}
    spec: {}

######




  parameters:
    - name: APP_NAME
      displayName: Microservice Name
      value: ''
      required: true
    - name: VERSION_JDK
      displayName: Openjdk version (8,11,13,16)
      value: '11'
      required: true
    - name: IMAGE_VERSION
      displayName: Image version (alpine, centos, rockylinux)
      value: 'alpine'
      required: true
    - name: REPO_GIT
      displayName: Git repository
      value: ""
      required: true
    - name: BRANCH_GIT
      displayName: Branch name git
      value: ""
      required: true
    - name: MVN_OPTS
      displayName: Extra maven opts. -DskipTests=true
      value: ""
    - name: NEXUS_MIRROR_URL
      displayName: Nexus private url. Recommend
      value: ""
    - name: EXTRA_JAVA_OPTS
      displayName: Java opts parameters. Recomend use default values
      value: ""
